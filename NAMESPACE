# Generated by roxygen2: do not edit by hand

S3method(add.distance,represampling)
S3method(add.distance,resampling)
S3method(as.character,tilename)
S3method(as.numeric,tilename)
S3method(as.represampling,list)
S3method(as.resampling,default)
S3method(as.resampling,factor)
S3method(as.resampling,list)
S3method(as.tilename,character)
S3method(as.tilename,numeric)
S3method(plot,represampling)
S3method(print,represampling)
S3method(print,resampling)
S3method(print,sperrorest)
S3method(print,sperroresterror)
S3method(print,sperrorestimportance)
S3method(print,sperrorestreperror)
S3method(print,tilename)
S3method(summary,represampling)
S3method(summary,resampling)
S3method(summary,sperrorest)
S3method(summary,sperroresterror)
S3method(summary,sperrorestimportance)
S3method(summary,sperrorestreperror)
export(add.distance)
export(as.represampling)
export(as.resampling)
export(as.tilename)
export(dataset.distance)
export(err.default)
export(get.small.tiles)
export(is.represampling)
export(is.resampling)
export(parsperrorest)
export(parsperrorest.old)
export(partition.cv)
export(partition.cv.strat)
export(partition.disc)
export(partition.factor)
export(partition.factor.cv)
export(partition.kmeans)
export(partition.loo)
export(partition.tiles)
export(represampling.bootstrap)
export(represampling.disc.bootstrap)
export(represampling.factor.bootstrap)
export(represampling.kmeans.bootstrap)
export(represampling.tile.bootstrap)
export(resample.factor)
export(resample.strat.uniform)
export(resample.uniform)
export(sperrorest)
export(tile.neighbors)
export(validate.resampling)
import(doParallel)
import(foreach)
import(pbapply)
import(rpart)
import(snow)
importFrom(ROCR,performance)
importFrom(ROCR,prediction)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(graphics,points)
importFrom(parallel,clusterSetRNGStream)
importFrom(parallel,detectCores)
importFrom(parallel,mc.reset.stream)
importFrom(parallel,mclapply)
importFrom(stats,IQR)
importFrom(stats,kmeans)
importFrom(stats,mad)
importFrom(stats,median)
importFrom(stats,predict)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stats,sd)
importFrom(stats,terms)
importFrom(stats,weighted.mean)
importFrom(utils,packageVersion)
